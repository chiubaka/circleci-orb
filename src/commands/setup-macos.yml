description: >
  Sets up a macOS executor for various React Native tasks. A significant portion of this command is
  ripped and modified from the react-native-community/react-native orb, which seems to
  expect full Detox configurations _and_ Android testing on macOS executors (which is silly
  given the cost).

parameters:
  app-dir:
    type: string
    default: "."
    description: Path to the directory containing your package.json file. Not needed if package.json lives in the root.
  homebrew-cache:
    default: true
    description: Should we cache after brew install?
    type: boolean
  homebrew-update:
    default: false
    description: Should we run brew update?
    type: boolean
  init-submodules:
    type: boolean
    default: false
    description: Whether or not to initialize submodules included in this repository.
  install-simulator-tools:
    description: Whether or not to install simulator tooling (required for e.g. Detox E2E testing)
    type: boolean
    default: false
  install-xcodes:
    description: Whether or not to install Xcodes for switching between Xcode versions
    type: boolean
    default: true
  node-version:
    default: "18"
    description: Full version tag of the version of node to use.
    type: string
  nx-affected:
    type: boolean
    default: true
    description: Whether or not to set up environment variables for `nx affected`.
  yarn-berry:
    type: boolean
    default: false
    description: Whether or not to use Yarn berry for package management. Defaults to Yarn v1.

steps:
  - checkout
  - run:
      command: >
        echo 'export
        PATH="$PATH:/usr/local/opt/node@<< parameters.node-version >>/bin:~/.yarn/bin:~/project/node_modules/.bin:~/project/example/node_modules/.bin"' >> $BASH_ENV

        echo 'export ANDROID_HOME="/usr/local/share/android-commandlinetools"' >> $BASH_ENV

        echo 'export
        ANDROID_SDK_ROOT="/usr/local/share/android-commandlinetools"' >> $BASH_ENV

        echo 'export
        PATH="$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH"' >> $BASH_ENV

        echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV

        echo 'export JAVA_HOME=$(/usr/libexec/java_home)' >> $BASH_ENV

        source $BASH_ENV
      name: Configure Environment Variables
  - when:
      condition: << parameters.homebrew-cache >>
      steps:
        - restore_cache:
            key: brew-cache-{{ arch }}-{{ .Environment.CACHE_VERSION }}-sim-tools-{{ parameters.install-simulator-tools }}
  - run:
      command: >
        set +e

        source ~/.bashrc

        command -v nvm

        nvm install << parameters.node-version >>

        nvm alias default << parameters.node-version >>
      name: Install node@<< parameters.node-version  >>
  - run:
      command: node --version
      name: Verify node version
  - when:
      condition: << parameters.homebrew-update >>
      steps:
        - run:
            command: brew update >/dev/null
            name: Update brew
  - when:
      condition: << parameters.install-simulator-tools >>
      steps:
        - run:
            command: >
              HOMEBREW_NO_AUTO_UPDATE=1 brew tap wix/brew > /dev/null

              HOMEBREW_NO_AUTO_UPDATE=1 brew install applesimutils > /dev/null
            name: Install Simulator Tools
  - when:
      condition: << parameters.install-xcodes >>
      steps:
        - run:
            name: Install Xcodes
            command: brew install xcodesorg/made/xcodes
  - when:
      condition: << parameters.homebrew-cache >>
      steps:
        - save_cache:
            key: brew-cache-{{ arch }}-{{ .Environment.CACHE_VERSION }}-sim-tools-{{ parameters.install-simulator-tools }}
            paths:
              - ~/Library/Caches/Homebrew
  - setup-react-native:
      app-dir: << parameters.app-dir >>
      init-submodules: << parameters.init-submodules >>
      nx-affected: << parameters.nx-affected >>
      yarn-berry: << parameters.yarn-berry >>
